<?xml version="1.0" encoding="UTF-8"?>
<!--以下特殊字符不可使用：-->
<!--&rsquo;全局替换为'-->
<!--<br/>换行符全局替换为\n-->
<blogs>
    <blog location="markdown_tools.html">
        <id>1</id>
        <date>November 30, 2018</date>
        <title>Tool - Markdown实时预览及Html互转</title>
        <description>
            Markdown 是一种简单的、轻量级的标记语法。用户可以使用诸如 * # 等简单的标记符号以最小的输入代价生成极富表现力的文档。
        </description>
        <cover>images/markdown.jpg</cover>
    </blog>
    <blog location="music/index.html">
        <id>2</id>
        <date>December 6, 2018</date>
        <title>Music - 告白气球（周杰伦）</title>
        <description>
            Music - 告白气球（周杰伦）
        </description>
        <cover>images/balloon.jpg</cover>
    </blog>
    <blog location="developer-single.html">
        <id>3</id>
        <date>December 17, 2018</date>
        <title>iOS - Refactoring Code</title>
        <description>
            iOS代码重构 : Refactoring - 改善既有代码的设计
        </description>
        <cover>../refactoring/1.png</cover>
        <markdown-content>![](../refactoring/2.png)![](../refactoring/3.png)![](../refactoring/4.png)![](../refactoring/5.png)![](../refactoring/6.png)![](../refactoring/7.png)![](../refactoring/8.png)![](../refactoring/9.png)![](../refactoring/10.png)![](../refactoring/11.png)![](../refactoring/12.png)![](../refactoring/13.png)![](../refactoring/14.png)![](../refactoring/15.png)![](../refactoring/16.png)![](../refactoring/17.png)![](../refactoring/18.png)![](../refactoring/19.png)![](../refactoring/20.png)![](../refactoring/21.png)![](../refactoring/22.png)![](../refactoring/23.png)![](../refactoring/24.png)![](../refactoring/25.png)![](../refactoring/26.png)![](../refactoring/27.png)![](../refactoring/28.png)![](../refactoring/29.png)![](../refactoring/30.png)![](../refactoring/31.png)![](../refactoring/32.png)![](../refactoring/33.png)![](../refactoring/34.png)
        </markdown-content>
    </blog>
    <blog location="developer-single.html">
        <id>4</id>
        <date>January 17, 2019</date>
        <title>HTML - 文件名和网址大小写敏感问题</title>
        <description>
            网址中协议和域名部分不分大小写。路径部分是否区分大小写则不一定，尽量统一使用小写。
        </description>
        <cover>developer-images/html-java-book.jpg</cover>
        <markdown-content>文件名和网址中尽量不用中文或者其他特殊符号；\n文件名尽量统一使用小写，单词之间连接使用“-”；\nurl路径名尽量统一使用小写，单词之间连接使用“_”。\n网址的基本结构是`[协议]://[域名]/[路径]`，其中协议和域名部分不分大小写。路径部分是否区分大小写则不一定。\nuri一般是直接映射到磁盘路径上，windows的磁盘路径不区分大小写，而unix区分。所以架在windows上的网站就不区分大小写，而架在unix上的就区分大小写。\n如果服务器是直接将路径映射到文件系统中去找，则不同平台上有不同实现：\nMac OS X 默认的文件系统（HFS case-insensitive) 是不分大小写的；\nWindows 上的 NTFS 也不区分大小写；\n Linux 系统常用的则是需要区分大小写的。
        </markdown-content>
    </blog>
    <blog location="developer-single.html">
        <id>5</id>
        <date>February 18, 2019</date>
        <title>Git - 统计研发人员的代码行数</title>
        <description>
            使用脚本快速根据日期统计研发人员的代码行数并导出为csv文件
        </description>
        <cover>developer-images/code.jpg</cover>
        <markdown-content>git_lines.sh脚本如下：\n```#!/bin/bash\ncsv=./$1年$2月$3日至今开发行数统计_temp.csv\ncsv2=./$1年$2月$3日至今开发行数统计.csv\necho "开始统计$1年$2月$3日至今每个人的代码行数..."\n# 移除同名文件\nrm -rf $csv $csv2\n# 防止csv乱码\n# printf "\xEF\xBB\xBF" > $csv\necho "$1年$2月$3日至今的开发行数,,," >> $csv\necho "开发人员,增加行数,删除行数,合计" >> $csv\n# 第一项($1)为增加的代码行数 第二项($2)为删除的代码行数 ($3)第三项为代码所在路径\ngit log --author=liulongdev --pretty=tformat: --numstat --since=$1-$2-$3 | awk '{add+=$1;del+=$2;total+=$1+$2;}END{print "刘X,"add,",",del,",",total}' >> $csv\ngit log --author=dashan.xiang --pretty=tformat: --numstat --since=$1-$2-$3 | awk '{add+=$1;del+=$2;total+=$1+$2}END{print "项XX,"add,",",del,",",total}' >> $csv\ngit log --author=minjing.lin --pretty=tformat: --numstat --since=$1-$2-$3 | awk '{add+=$1;del+=$2;total+=$1+$2}END{print "林XX,"add,",",del,",",total}' >> $csv\ngit log --author=feng.kong --pretty=tformat: --numstat --since=$1-$2-$3 | awk '{add+=$1;del+=$2;total+=$1+$2}END{print "孔X,"add,",",del,",",total}' >> $csv\n# iconv文件字符转码为GB18030以支持Excel,避免中文乱码\niconv -f UTF8 -t GB18030 $csv >$csv2\n# 移除UTF8编码的csv文件\nrm -rf $csv\necho "结束统计:)"\necho "旧版本的Excel不支持逗号分割符"\necho "推荐使用Mac自带的Numbers打开《$1年$2月$3日至今开发行数统计.csv》"\n# 使用Mac自带的Numbers打开csv文件\nopen $csv2 -a Numbers```\n终端实例：\n```# 切换到Git项目目录下\n$ cd /Users/mxr/Desktop/4dbookcity\n# 执行脚本\n$ sh /Users/mxr/Desktop/git_lines.sh 2018 6 1\n开始统计2018年6月1日至今每个人的代码行数...\n结束统计:)\n旧版本的Excel不支持逗号分割符\n推荐使用Mac自带的Numbers打开《2018年6月1日至今开发行数统计.csv》```![](developer-images/git_lines_csv.png)
        </markdown-content>
    </blog>
    <blog location="developer-single.html">
        <id>6</id>
        <date>March 4, 2019</date>
        <title>PM - 产品体验日记：10个优秀设计、1个深度思考</title>
        <description>
            灵感、方案、审美、眼界 来源于日常储备
        </description>
        <cover>../product-manager/cover/turned-on-smartphone.jpg</cover>
        <markdown-content>**一、哔哩哔哩**\n设计点：结合实际情况，将需求中的同类场景组织到一个页面内。\n随着二维码的广泛运用，扫码加好友的功能也越来越普及。每次加好友时，我们总需要问对方一句“你扫我还是我扫你呢？”来确认自己应该打开ID二维码，还是“扫一扫”的功能。\nB站就很聪明的将用户自己的ID二维码与扫码功能设置在了同一个界面，加好友时直接打开“扫一扫”界面就可以同时应对两种功能需求了。优化了功能的操作路径，也避免了用户询问扫码对象的麻烦和小尴尬，很贴心～![](../product-manager/images/bilibili-scan.jpg)**二、西瓜视频**\n设计点：合理利用系统控件简化界面，从而降低对用户的使用影响。\n用户沉浸Feed流观看视频时 进行音量调节会对屏幕造成遮挡，从而影响浏览体验，优化可针对市面两种类型手机（标准屏幕与iPhone X）分别进行优化。利用系统控件的可自定义化，增强产品的使用体验。![](../product-manager/images/watermelon-voice.jpg)![](../product-manager/images/watermelon-voice-iPhoneX.gif)**三、高德地图**\n设计点：优秀的设计源自对生活的观察，功能设计之前，需考虑到实际生活中各种可能发生的场景。\n现实中的痛点/教训：本人确实有因为某行周六周日营业时间是根据地区不同而轮值，导致白跑一趟的场景。吸取教训后，下次出发前都会先百度营业时间，先不谈搜索的准确率，退出高德→打开百度→输入搜索→等待→查找结果概览→查看详情→再返回高德，这个流程就很繁琐。\n所以，如果不清楚银行、政府机构或是店铺的办公营业时间，我们有时候会因为拿不准时间而白跑一趟。但使用“高德地图”导航路线，你就能一定程度上避免“吃闭门羹”的窘迫状况。\n新版的“高德地图”优化了营业时间查询的功能，用户不仅可以通过定位结果查询到该地址的办公时间、电话等信息，系统还会在导航路线里提醒用户店铺是否处于打烊状态。将营业时间查询功能直接嵌入到导航结果之中，能在第一时间给予用户贴心提示，避免用户浪费时间走冤枉路。![](../product-manager/images/gaode-map.jpg)**四、微博**\n设计点：产品诉求与用户诉求之间的区别，通过这2种维度去组织需求。从中起到平衡的作用，既尊重了用户 又考虑到产品面。\n【通知】产品面的诉求：通知栏是产品方面期望用户关注社交动态的强推功能，产品方面希望用户默认关注，并在tab bar内的布局层级最高。\n【消息】用户面的诉求：与自己最相关的消息是用户最为关心的，在用户的角度而言，消息栏的权重比通知栏相对重要。![](../product-manager/images/weibo-noti-type.jpg)**五、即刻**\n设计点：根据不同内容的情境，设计与之契合的icon和微交互，扩大惊喜层面的设计范围，也是件让用户既然开心又好奇的事。\n1. 点赞功能按钮，除了常规情况下会显示为表示点赞手势的icon，还会在不同内容的主题广场里变成与主题相关的图案。\n比如在篮球主题相关的搜索内容里，点赞按钮会变成篮球图标；在关于爱情综艺“心动的信号”的话题里，内容下方的点赞按钮会变成“心心眼”的笑脸图标。最有趣的是关于平台团宠猫果果的相关话题内容，点赞的图标会变成小鱼干，而点赞后的icon则变成了鱼骨头。仿佛小鱼干是被果果偷吃了呢，真是可爱又有灵性。![](../product-manager/images/jike-moment.gif)2. 在“即刻”收到信息通知，不仅会在tab栏的“我的”显示小黄点提醒，而且“我的通知”在列表页的信封小图标会呈现打开的状态。\n由于没有新信息的常态下信封图标是一直合上的，只有收到互动信息的用户才会发现这个可爱的彩蛋，算是团队为用户们准备的小惊喜吧。如果想要看到小信封开启，那就多和其他用户互动吧！![](../product-manager/images/jike-email.jpg)**六、抖音**\n设计点：缩短操作路径、合理利用点击热区，是提高使用效率和反馈体验的方法之一。\n多数产品在设计页面模态弹窗引导用户进行操作行为时，都会将操作控件放在固定的页面位置（一般居中或者处于页面底部）。但“抖音”的设计却让人眼前一亮：系统会检测用户进行操作时手指与屏幕的接触位置，并将模态弹窗的操控按钮显示在离触发手指最近的地方。\n随用户手部活动区域变化而灵活变更位置的模态弹窗设计，使用户在进行手势交互的过程中操作动作能始终在手部的舒适区域内进行，是应对大屏时代十分友好的体验设计。![](../product-manager/images/douyin-tap.jpg)**七、网易云音乐**\n设计点：深层次的情感化设计，互联网产品应有的社会责任。\n在“知乎”与“百度”等搜索平台搜索关键字“自杀”，都会出现暖心的开导用户的文案与心理援助热线提示。“网易云音乐”在处理这种特殊使用场景时也有自己特别的心理干预设计。当在“网易云”的搜索栏检索“自杀”，会跳转至由“云村治愈所”官方发布的一篇名为“生活没有那么奇妙，但有你才会变得美好”的文章。不仅有治愈性的文字与配图，还有抚慰心灵的音乐推荐。但更加具有治愈效果的是温情满满的评论区文字。\n就像一位用户在评论里说的：专栏的文字与歌单看了七七八八依旧漠然，但这些鲜活的评论，大家怀揣希望或忧郁写下的一字一句却让我出神了许久。云村治愈所收留每个想要倾诉的灵魂，保护每一位村民柔软的心。![](../product-manager/images/wangyiyun-suicide.gif)**八、微信**\n设计点：能提供默认或选择的，就不要让用户输入（表单设计法则之一）。通常在“微信”使用“发红包”的功能时，填写祝福文案的输入框内会默认显示“恭喜发财，大吉大利”，即默认的红包封面祝福语。当特殊节日来临时，默认文案就会自动变更为适合该节日的文案。比如元宵节到了，当天发红包时如果不填祝福语，封面的文案会默认显示“元宵节快乐”。灵活应景的默认祝福语预设，为不知道写什么或者懒得写祝福语的用户提供了极大的便利。![](../product-manager/images/wechat-red-packet.jpg)**九、还是微信**\n设计点：众多用户的使用习惯 逐渐形成了一个功能性诉求，提升易用性的方法就在其中，这里是用户为我们找到的设计点，因此要尊重用户的使用习惯，将使用习惯融入到流程设计中，从而简化“实际操作路径”。\n在最新版“微信”( V.7.0.3)使用红包功能时，你会发现收取红包后的页面比之前的版本多了“回复一个表情到聊天”的按钮。由于很多人在接受了他人的红包后，都有回复一个表情作为感谢的习惯。所以出于对这个较普遍使用场景的考量和预判，团队在对“微信”的交互体验进行优化时将回复表情的快捷操作放到了红包当前页。\n简化了用户操作时的页面跳转路径，收发红包变得更加方便。系统还会自动记录上一次收红包时回复使用的表情，点击即可一键回复，超级贴心。忍不住为这个小细节打call～![](../product-manager/images/wechat-packet-reply.jpg)**十、百度网盘**\n设计点：文案设计是【表现层】当中，重要的设计点之一，优质的文案能拉近产品与用户的距离。在不同时间段推出符合场景的文案，让人感觉产品有“温度”。\n记得上个月情人节，在各大产品放出情人节彩蛋的时候，「百度网盘」却用一句温暖的提示表达了对弱势群体—单身用户们的关爱。在首页的用户信息处会显示「无论今天几人，网盘都永远陪伴你」的微文案。\n在呼应「百度网盘」slogan「让美好永远陪伴」的同时，也传达了对特殊节日的关照。这个世界总是对单身狗恶意满满，这样的温馨提示会让孤单的你感到一丝温暖么？除了节日外，还会在不同时间段给出暖人心扉的文案。![](../product-manager/images/baidu-drive-date.jpg)**思考：弱化时间线是产品让人上瘾的关键因素**\n抖音、头条、微博这类信息流产品，核心产品指标永远是用户的浏览时长和深度，所以在产品设计的时候是无所不用其极，去吸引用户不断的刷下去，不管是算法还是UI ，都在想办法吸引用户去不断地消费内容，忘记时间。\n最典型的是抖音，刷过抖音的人都觉得有毒，一刷能刷好几个小时。头条和微博也一样，很容易打开就停不下来。这些产品都有一个共同的特点，界面上时间的印记很弱。尤其是抖音，几乎看不到时间的痕迹（状态栏被隐藏了），而微博的时间线现在也是紊乱的，时不时插入很多非线性的内容(根据你的浏览记录智能推荐，不基于时间)。头条的界面也把时间做得很弱。
        </markdown-content>
    </blog>
</blogs>
