<?xml version="1.0" encoding="UTF-8"?>
<!--以下特殊字符不可使用：-->
<!--&rsquo;全局替换为'-->
<!--<br/>换行符全局替换为\n-->
<blogs>
    <blog location="markdown_tools.html">
        <id>1</id>
        <date>November 30, 2018</date>
        <title>Tool - Markdown实时预览及Html互转</title>
        <description>
            Markdown 是一种简单的、轻量级的标记语法。用户可以使用诸如 * # 等简单的标记符号以最小的输入代价生成极富表现力的文档。
        </description>
        <cover>images/markdown.jpg</cover>
    </blog>
    <blog location="music/index.html">
        <id>2</id>
        <date>December 6, 2018</date>
        <title>Music - 告白气球（周杰伦）</title>
        <description>
            Music - 告白气球（周杰伦）
        </description>
        <cover>images/balloon.jpg</cover>
    </blog>
    <blog location="developer-single.html">
        <id>3</id>
        <date>December 17, 2018</date>
        <title>iOS - Refactoring Code</title>
        <description>
            iOS代码重构 : Refactoring - 改善既有代码的设计
        </description>
        <cover>../refactoring/1.png</cover>
        <markdown-content>![](../refactoring/2.png)![](../refactoring/3.png)![](../refactoring/4.png)![](../refactoring/5.png)![](../refactoring/6.png)![](../refactoring/7.png)![](../refactoring/8.png)![](../refactoring/9.png)![](../refactoring/10.png)![](../refactoring/11.png)![](../refactoring/12.png)![](../refactoring/13.png)![](../refactoring/14.png)![](../refactoring/15.png)![](../refactoring/16.png)![](../refactoring/17.png)![](../refactoring/18.png)![](../refactoring/19.png)![](../refactoring/20.png)![](../refactoring/21.png)![](../refactoring/22.png)![](../refactoring/23.png)![](../refactoring/24.png)![](../refactoring/25.png)![](../refactoring/26.png)![](../refactoring/27.png)![](../refactoring/28.png)![](../refactoring/29.png)![](../refactoring/30.png)![](../refactoring/31.png)![](../refactoring/32.png)![](../refactoring/33.png)![](../refactoring/34.png)
        </markdown-content>
    </blog>
    <blog location="developer-single.html">
        <id>4</id>
        <date>January 17, 2019</date>
        <title>HTML - 文件名和网址大小写敏感问题</title>
        <description>
            网址中协议和域名部分不分大小写。路径部分是否区分大小写则不一定，尽量统一使用小写。
        </description>
        <cover>developer-images/html-java-book.jpg</cover>
        <markdown-content>文件名和网址中尽量不用中文或者其他特殊符号；\n文件名尽量统一使用小写，单词之间连接使用“-”；\nurl路径名尽量统一使用小写，单词之间连接使用“_”。\n网址的基本结构是`[协议]://[域名]/[路径]`，其中协议和域名部分不分大小写。路径部分是否区分大小写则不一定。\nuri一般是直接映射到磁盘路径上，windows的磁盘路径不区分大小写，而unix区分。所以架在windows上的网站就不区分大小写，而架在unix上的就区分大小写。\n如果服务器是直接将路径映射到文件系统中去找，则不同平台上有不同实现：\nMac OS X 默认的文件系统（HFS case-insensitive) 是不分大小写的；\nWindows 上的 NTFS 也不区分大小写；\n Linux 系统常用的则是需要区分大小写的。
        </markdown-content>
    </blog>
    <blog location="developer-single.html">
        <id>5</id>
        <date>February 18, 2019</date>
        <title>Git - 统计研发人员的代码行数</title>
        <description>
            使用脚本快速根据日期统计研发人员的代码行数并导出为csv文件
        </description>
        <cover>developer-images/code_lines.png</cover>
        <markdown-content>git_lines.sh脚本如下：\n```#!/bin/bash\ncsv=./$1年$2月$3日至今开发行数统计_temp.csv\ncsv2=./$1年$2月$3日至今开发行数统计.csv\necho "开始统计$1年$2月$3日至今每个人的代码行数..."\n# 移除同名文件\nrm -rf $csv $csv2\n# 防止csv乱码\n# printf "\xEF\xBB\xBF" > $csv\necho "$1年$2月$3日至今的开发行数,,," >> $csv\necho "开发人员,增加行数,删除行数,合计" >> $csv\n# 第一项($1)为增加的代码行数 第二项($2)为删除的代码行数 ($3)第三项为代码所在路径\ngit log --author=liulongdev --pretty=tformat: --numstat --since=$1-$2-$3 | awk '{add+=$1;del+=$2;total+=$1+$2;}END{print "刘X,"add,",",del,",",total}' >> $csv\ngit log --author=dashan.xiang --pretty=tformat: --numstat --since=$1-$2-$3 | awk '{add+=$1;del+=$2;total+=$1+$2}END{print "项XX,"add,",",del,",",total}' >> $csv\ngit log --author=minjing.lin --pretty=tformat: --numstat --since=$1-$2-$3 | awk '{add+=$1;del+=$2;total+=$1+$2}END{print "林XX,"add,",",del,",",total}' >> $csv\ngit log --author=feng.kong --pretty=tformat: --numstat --since=$1-$2-$3 | awk '{add+=$1;del+=$2;total+=$1+$2}END{print "孔X,"add,",",del,",",total}' >> $csv\n# iconv文件字符转码为GB18030以支持Excel,避免中文乱码\niconv -f UTF8 -t GB18030 $csv >$csv2\n# 移除UTF8编码的csv文件\nrm -rf $csv\necho "结束统计:)"\necho "旧版本的Excel不支持逗号分割符"\necho "推荐使用Mac自带的Numbers打开《$1年$2月$3日至今开发行数统计.csv》"\n# 使用Mac自带的Numbers打开csv文件\nopen $csv2 -a Numbers```\n终端实例：\n```$ sh git_lines.sh 2018 6 1\n开始统计2018年6月1日至今每个人的代码行数...\n结束统计:)\n旧版本的Excel不支持逗号分割符\n推荐使用Mac自带的Numbers打开《2018年6月1日至今开发行数统计.csv》```
        </markdown-content>
    </blog>
</blogs>
